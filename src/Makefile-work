#############################################################################
# Makefile for building: amee
# Generated by qmake (2.01a) (Qt 4.6.2) on: ven. sept. 10 16:37:31 2010
# Project:  amee.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile amee.pro
#############################################################################

####### Compiler, tools and options

CC            = /mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/toolchain-arm_v4t_gcc-4.3.3+cs_uClibc-0.9.30.1_eabi/bin/arm-openwrt-linux-gcc
CXX           = /mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/toolchain-arm_v4t_gcc-4.3.3+cs_uClibc-0.9.30.1_eabi/bin/arm-openwrt-linux-gcc
DEFINES       = -DQT_NO_DEBUG -DQT_DBUS_LIB -DQT_CORE_LIB
CFLAGS        = -D_REENTRANT $(DEFINES) -O2 -pipe -march=armv4t -mtune=arm920t -funit-at-a-time -fhonour-copts -msoft-float -Wall -Wno-pointer-sign
CXXFLAGS      = -D_REENTRANT $(DEFINES) -O2 -pipe -march=armv4t -mtune=arm920t -funit-at-a-time -fhonour-copts -msoft-float -Wall 
INCPATH       = -I/tmp/mkspecs/linux-openwrt-g++ -I.
INCPATH      += -I/mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/build_dir/target-arm_v4t_uClibc-0.9.30.1_eabi/qt-everywhere-opensource-src-4.7.0-beta2/include/
INCPATH      += -I/mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/build_dir/target-arm_v4t_uClibc-0.9.30.1_eabi/qt-everywhere-opensource-src-4.7.0-beta2/include/QtCore
LINK          = /mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/toolchain-arm_v4t_gcc-4.3.3+cs_uClibc-0.9.30.1_eabi/bin/arm-openwrt-linux-g++
LFLAGS        = -Wl,-rpath,/mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/target-arm_v4t_uClibc-0.9.30.1_eabi/usr/lib/ -L/mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/target-arm_v4t_uClibc-0.9.30.1_eabi/usr/lib/
LIBS          = $(SUBLIBS)   -lQtDBus -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = ranlib
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		dbus/dbus_device_service.cpp \
		dbus/dbus_devices_manager.cpp \
		dbus/arduino/arduino_service.cpp \
		dbus/webcam/webcam_service.cpp moc_dbus_device_service.cpp
OBJECTS       = main.o \
		dbus_device_service.o \
		dbus_devices_manager.o \
		arduino_service.o \
		webcam_service.o \
		moc_dbus_device_service.o
DIST          = /tmp/mkspecs/common/g++.conf \
		/tmp/mkspecs/common/unix.conf \
		/tmp/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/tmp/mkspecs/features/qt_functions.prf \
		/tmp/mkspecs/features/qt_config.prf \
		/tmp/mkspecs/features/exclusive_builds.prf \
		/tmp/mkspecs/features/default_pre.prf \
		/tmp/mkspecs/features/release.prf \
		/tmp/mkspecs/features/default_post.prf \
		/tmp/mkspecs/features/warn_on.prf \
		/tmp/mkspecs/features/qt.prf \
		/tmp/mkspecs/features/moc.prf \
		/tmp/mkspecs/features/dbusinterfaces.prf \
		/tmp/mkspecs/features/dbusadaptors.prf \
		/tmp/mkspecs/features/unix/thread.prf \
		/tmp/mkspecs/features/resources.prf \
		/tmp/mkspecs/features/uic.prf \
		/tmp/mkspecs/features/yacc.prf \
		/tmp/mkspecs/features/lex.prf \
		/tmp/mkspecs/features/include_source_dir.prf \
		amee.pro
QMAKE_TARGET  = amee
DESTDIR       = 
TARGET        = amee

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: amee.pro  /tmp/mkspecs/linux-openwrt-g++/qmake.conf /tmp/mkspecs/common/g++.conf \
		/tmp/mkspecs/common/unix.conf \
		/tmp/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/tmp/mkspecs/features/qt_functions.prf \
		/tmp/mkspecs/features/qt_config.prf \
		/tmp/mkspecs/features/exclusive_builds.prf \
		/tmp/mkspecs/features/default_pre.prf \
		/tmp/mkspecs/features/release.prf \
		/tmp/mkspecs/features/default_post.prf \
		/tmp/mkspecs/features/warn_on.prf \
		/tmp/mkspecs/features/qt.prf \
		/tmp/mkspecs/features/moc.prf \
		/tmp/mkspecs/features/dbusinterfaces.prf \
		/tmp/mkspecs/features/dbusadaptors.prf \
		/tmp/mkspecs/features/unix/thread.prf \
		/tmp/mkspecs/features/resources.prf \
		/tmp/mkspecs/features/uic.prf \
		/tmp/mkspecs/features/yacc.prf \
		/tmp/mkspecs/features/lex.prf \
		/tmp/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -o Makefile amee.pro
/tmp/mkspecs/common/g++.conf:
/tmp/mkspecs/common/unix.conf:
/tmp/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/tmp/mkspecs/features/qt_functions.prf:
/tmp/mkspecs/features/qt_config.prf:
/tmp/mkspecs/features/exclusive_builds.prf:
/tmp/mkspecs/features/default_pre.prf:
/tmp/mkspecs/features/release.prf:
/tmp/mkspecs/features/default_post.prf:
/tmp/mkspecs/features/warn_on.prf:
/tmp/mkspecs/features/qt.prf:
/tmp/mkspecs/features/moc.prf:
/tmp/mkspecs/features/dbusinterfaces.prf:
/tmp/mkspecs/features/dbusadaptors.prf:
/tmp/mkspecs/features/unix/thread.prf:
/tmp/mkspecs/features/resources.prf:
/tmp/mkspecs/features/uic.prf:
/tmp/mkspecs/features/yacc.prf:
/tmp/mkspecs/features/lex.prf:
/tmp/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile amee.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/amee1.0.0 || $(MKDIR) .tmp/amee1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/amee1.0.0/ && $(COPY_FILE) --parents dbus/dbus_device_service.h dbus/dbus_devices_manager.h dbus/arduino/arduino_service.h dbus/webcam/webcam_service.h .tmp/amee1.0.0/ && $(COPY_FILE) --parents main.cpp dbus/dbus_device_service.cpp dbus/dbus_devices_manager.cpp dbus/arduino/arduino_service.cpp dbus/webcam/webcam_service.cpp .tmp/amee1.0.0/ && (cd `dirname .tmp/amee1.0.0` && $(TAR) amee1.0.0.tar amee1.0.0 && $(COMPRESS) amee1.0.0.tar) && $(MOVE) `dirname .tmp/amee1.0.0`/amee1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/amee1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_dbus_device_service.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_dbus_device_service.cpp
moc_dbus_device_service.cpp: dbus/dbus_device_service.h
	/mnt/data/Logiciels/OpenWRT-Freerunner/openwrt/staging_dir/host/bin/moc $(DEFINES) $(INCPATH) dbus/dbus_device_service.h -o moc_dbus_device_service.cpp

compiler_dbus_interface_source_make_all:
compiler_dbus_interface_source_clean:
compiler_dbus_adaptor_source_make_all:
compiler_dbus_adaptor_source_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_dbus_interface_header_make_all:
compiler_dbus_interface_header_clean:
compiler_dbus_interface_moc_make_all:
compiler_dbus_interface_moc_clean:
compiler_dbus_adaptor_header_make_all:
compiler_dbus_adaptor_header_clean:
compiler_dbus_adaptor_moc_make_all:
compiler_dbus_adaptor_moc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp dbus/dbus_devices_manager.h \
		dbus/dbus_device_service.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

dbus_device_service.o: dbus/dbus_device_service.cpp dbus/dbus_device_service.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbus_device_service.o dbus/dbus_device_service.cpp

dbus_devices_manager.o: dbus/dbus_devices_manager.cpp dbus/dbus_devices_manager.h \
		dbus/dbus_device_service.h \
		dbus/arduino/arduino_service.h \
		dbus/webcam/webcam_service.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbus_devices_manager.o dbus/dbus_devices_manager.cpp

arduino_service.o: dbus/arduino/arduino_service.cpp dbus/arduino/arduino_service.h \
		dbus/dbus_device_service.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arduino_service.o dbus/arduino/arduino_service.cpp

webcam_service.o: dbus/webcam/webcam_service.cpp dbus/webcam/webcam_service.h \
		dbus/dbus_device_service.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o webcam_service.o dbus/webcam/webcam_service.cpp

moc_dbus_device_service.o: moc_dbus_device_service.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dbus_device_service.o moc_dbus_device_service.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

